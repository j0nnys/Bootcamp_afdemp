@model WorldTour.Models.BTViewModel

@{
    ViewBag.Title = "GetBookingDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Fill in the passenger details</h2>

<p>
    Your booking will be for @Model.Quantity adults
    @{ if (Model.Children != 0)
        {<text> and </text> @Model.Children <text> children. </text> }}<br />
    The total cost of your tickets is @Math.Round(Model.Total_Price, 2) &euro;.
</p>
<p>
    Please fill all the required fields
</p>

@using (Html.BeginForm("Checkout", "Bookings", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "Please enter all of your details correctly!", new { @class = "alert-danger" })

    for (int i = 0; i < Model.Quantity; i++)
    {
        <fieldset>
            <legend>
                Passenger @(i + 1) (Adult)
            </legend>

            <text>First Name:</text>
            @Html.TextBoxFor(m => m.Tickets[i].FirstName, new { required = "required" })<br />
            @Html.ValidationMessageFor(model => model.Tickets[i].FirstName, "", new { @class = "alert-danger" })<br />
            <text>Last Name:</text>
            @Html.TextBoxFor(m => m.Tickets[i].LastName, new { required = "required" })<br />
            @Html.ValidationMessageFor(model => model.Tickets[i].LastName, "", new { @class = "alert-danger" })<br />
            <text>
                Class:
            </text>
            @Html.DisplayFor(m => m.Class) <br />
        </fieldset>
    }

    for (int i = Model.Quantity; i < Model.Children + Model.Quantity; i++)
    {
        <fieldset>
            <legend>Passenger @(i + 1) (Child)</legend>
            <text>First Name:</text>
            @Html.TextBoxFor(m => m.Tickets[i].FirstName, new { required = "required" })<br />
            @Html.ValidationMessageFor(model => model.Tickets[i].FirstName, "", new { @class = "alert-danger" })<br />
            <text>Last Name:</text>
            @Html.TextBoxFor(m => m.Tickets[i].LastName, new { required = "required" })<br />
            @Html.ValidationMessageFor(model => model.Tickets[i].LastName, "", new { @class = "alert-danger" })<br />
            <text>
                Class:
            </text>
            @Html.DisplayFor(m => m.Class) <br />
        </fieldset>
    }
    <fieldset>
        <legend>Contact Details</legend>
        <text> Put Your Name:</text>
        @Html.TextBoxFor(m => m.BookingName, new { required = "required" }) <br />
        @Html.ValidationMessageFor(model => model.BookingName, "", new { @class = "alert-danger" })<br />
        <text>Put Your e-mail:</text>
        @Html.TextBoxFor(m => m.Email, new {type = "email", required = "required" }) <br />
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "alert-danger" })<br />
        <text>(Optional)Put Your Phone Number:</text>
        @Html.TextBoxFor(m => m.Phone, new { type = "tel" }) <br />
        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "alert-danger" })<br />
    </fieldset>


    @Html.HiddenFor(m => m.FID)
    @Html.HiddenFor(m => m.RFID)
    @Html.HiddenFor(m => m.Quantity)
    @Html.HiddenFor(m => m.Children)
    @Html.HiddenFor(m => m.Total_Price)
    @Html.HiddenFor(m => m.Class)

    <input type="submit" value="Go to Payment" />
}
